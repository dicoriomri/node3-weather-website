Index: src/utils/updatesFromWatch.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let request = require('request');\nconst {initializeApp} = require('firebase-admin');\nconst {getMessaging} = require(\"firebase-admin/messaging\");\nconst {getFirestore, Timestamp, FieldValue, Filter} = require('firebase-admin/firestore');\nconst schedule = require('node-schedule');\nconst {google} = require('googleapis');\nconst MESSAGING_SCOPE = 'https://www.googleapis.com/auth/firebase.messaging';\nconst SCOPES = [MESSAGING_SCOPE];\n\n\nlet admin = require(\"firebase-admin\");\n\nlet serviceAccount = require(\"../json/headz-app-firebase-adminsdk-ffml9-29700b66b3.json\");\nif (!admin.apps.length) {\n    const firebaseAdmin = admin.initializeApp({\n        credential: admin.credential.cert(serviceAccount),\n        databaseURL: \"dB_URL\"\n    });\n}\n\nconst moment = require(\"moment\");\n\n\nconst db = getFirestore();\n\nfunction getAccessToken() {\n    return new Promise(function (resolve, reject) {\n        const key = require('../assets/headz-app-firebase-adminsdk-ffml9-8b0eb6d364.json');\n        const jwtClient = new google.auth.JWT(\n            key.client_email,\n            null,\n            key.private_key,\n            SCOPES,\n            null\n        );\n        jwtClient.authorize(function (err, tokens) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(tokens.access_token);\n        });\n    });\n}\n\nconst saveDataToGame = (req, callback) => {\n    const command = req.query.command;\n    const commandsData = req.query.command.split('-');\n    // alert(commandsData)\n    const functionToUse = commandsData[0]\n    const variable = commandsData[1]\n    const gameID = commandsData[2]\n    let scoreValue\n    if (commandsData.length > 3) {\n        scoreValue = parseInt(commandsData[3])\n    }\n    const docRef = db.collection('games').doc(gameID);\n    docRef.get().then(async (response) => {\n        let gameData = response.data()\n        const field_name = gameData.field_name;\n        const teams = gameData.teams;\n\n        if (!gameData.homeTeam) {\n            callback(false, {\n                    \"field_name\": null,\n                    \"homeTeam\": null,\n                    \"awayTeam\": null,\n                    \"awayScore\": null,\n                    // \"gameFlow\": null,\n                    \"homeScore\": null,\n                    \"showTieBreaker\": null\n                }\n            )\n        }\n\n        let resultData = {\n            allResults: gameData.allResults,\n            table: gameData.table,\n            pending: gameData.pending,\n            homeTeam: gameData.homeTeam,\n            awayTeam: gameData.awayTeam,\n            gameFlow: gameData.gameFlow,\n            homeScore: gameData.homeScore || 0,\n            awayScore: gameData.awayScore || 0,\n            showTieBreaker: gameData.showTieBreaker || false,\n        }\n        if (functionToUse === 'setTeamScore') {\n            resultData[variable] = scoreValue\n        }\n        if (functionToUse === 'addGoalToTeam') {\n            resultData[variable]++\n        }\n        if (functionToUse === 'subGoalToTeam') {\n            if (resultData[variable] && resultData[variable] > 0) {\n                resultData[variable]--\n            }\n        }\n        if (functionToUse === 'advances') {\n            resultData.showTieBreaker = false;\n            const homeIndex = resultData.table.findIndex(team => team.teamName === resultData.homeTeam)\n            const awayIndex = resultData.table.findIndex(team => team.teamName === resultData.awayTeam)\n            if (resultData.awayScore === resultData.homeScore) {\n                resultData.table[homeIndex].teamPoints += 1\n                resultData.table[awayIndex].teamPoints += 1\n                resultData.table[awayIndex].teamDraw += 1\n                resultData.table[homeIndex].teamDraw += 1\n                resultData.table[homeIndex].teamGames++\n                resultData.table[homeIndex].teamFor += resultData.homeScore\n                resultData.table[homeIndex].teamAgainst += resultData.awayScore\n                resultData.table[awayIndex].teamGames++\n                resultData.table[awayIndex].teamFor += resultData.awayScore\n                resultData.table[awayIndex].teamAgainst += resultData.homeScore\n            }\n            resultData.allResults.push(\n                {\n                    homeTeam: {\n                        name: resultData.homeTeam,\n                        score: resultData.homeScore,\n                        advances: variable !== 'homeTeam'\n                    },\n                    awayTeam: {\n                        name: resultData.awayTeam,\n                        score: resultData.awayScore,\n                        advances: variable !== 'awayTeam'\n                    },\n                    gameFlow: resultData.gameFlow\n                }\n            );\n            resultData.pending.push(resultData[variable])\n            resultData[variable] = resultData.pending.shift();\n            resultData.homeScore = 0;\n            resultData.awayScore = 0;\n            resultData.gameFlow = []\n        }\n        if (functionToUse === 'cancelResult') {\n            resultData.showTieBreaker = false;\n            resultData.homeScore = 0;\n            resultData.awayScore = 0;\n        }\n        if (functionToUse === 'cancelResultAndDelete') {\n            const homeTeamToRestore = resultData.allResults[resultData.allResults.length - 1].homeTeam\n            const awayTeamToRestore = resultData.allResults[resultData.allResults.length - 1].awayTeam\n            const homeIndex = resultData.table.findIndex(team => team.teamName === homeTeamToRestore.name)\n            const awayIndex = resultData.table.findIndex(team => team.teamName === awayTeamToRestore.name)\n            if (homeTeamToRestore.score > awayTeamToRestore.score) {\n                resultData.table[homeIndex].teamPoints -= 3\n                resultData.table[homeIndex].teamGames--\n                resultData.table[homeIndex].teamFor -= homeTeamToRestore.score\n                resultData.table[homeIndex].teamAgainst -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamGames--\n                resultData.table[awayIndex].teamFor -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamAgainst -= homeTeamToRestore.score\n                resultData.pending.unshift(resultData.awayTeam)\n                resultData.awayTeam = resultData.pending.pop()\n            } else if (homeTeamToRestore.score < awayTeamToRestore.score) {\n                resultData.table[awayIndex].teamPoints -= 3\n                resultData.table[homeIndex].teamGames--\n                resultData.table[homeIndex].teamFor -= homeTeamToRestore.score\n                resultData.table[homeIndex].teamAgainst -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamGames--\n                resultData.table[awayIndex].teamFor -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamAgainst -= homeTeamToRestore.score\n                resultData.pending.unshift(resultData.homeTeam)\n                resultData.homeTeam = resultData.pending.pop()\n            } else if (homeTeamToRestore.score === awayTeamToRestore.score) {\n                resultData.table[homeIndex].teamPoints -= 1\n                resultData.table[awayIndex].teamPoints -= 1\n                resultData.table[awayIndex].teamDraw -= 1\n                resultData.table[homeIndex].teamDraw -= 1\n                resultData.table[homeIndex].teamGames--\n                resultData.table[homeIndex].teamFor -= homeTeamToRestore.score\n                resultData.table[homeIndex].teamAgainst -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamGames--\n                resultData.table[awayIndex].teamFor -= awayTeamToRestore.score\n                resultData.table[awayIndex].teamAgainst -= homeTeamToRestore.score\n                if (homeTeamToRestore.advances) {\n                    resultData.pending.unshift(resultData.awayTeam)\n                    resultData.awayTeam = resultData.pending.pop()\n                }\n                if (awayTeamToRestore.advances) {\n                    resultData.pending.unshift(resultData.homeTeam)\n                    resultData.homeTeam = resultData.pending.pop()\n                }\n            }\n            const lastGame = resultData.allResults[resultData.allResults.length - 1]\n            if (lastGame && lastGame.gameFlow && lastGame.gameFlow.length > 0) {\n                lastGame.gameFlow.forEach((flow) => {\n                    if (flow.scorer) {\n                        const playerIndex = teams[flow.scorer.teamNumber].teamPlayers.findIndex(player => player.userID == flow.scorer.playerID)\n                        if (playerIndex > -1) {\n                            if (teams[flow.scorer.teamNumber].teamPlayers[playerIndex].goals && teams[flow.scorer.teamNumber].teamPlayers[playerIndex].goals > 0) {\n                                teams[flow.scorer.teamNumber].teamPlayers[playerIndex].goals--\n                            }\n                        }\n                    }\n\n                    if (flow.assist) {\n                        const playerIndexAssist = teams[flow.assist.teamNumber].teamPlayers.findIndex(player => player.userID == flow.assist.playerID)\n                        if (playerIndexAssist > -1) {\n                            if (teams[flow.assist.teamNumber].teamPlayers[playerIndexAssist].assists && teams[flow.assist.teamNumber].teamPlayers[playerIndexAssist].assists > 0) {\n                                teams[flow.assist.teamNumber].teamPlayers[playerIndexAssist].assists--\n                            }\n                        }\n                    }\n                })\n            }\n            resultData.allResults.pop()\n        }\n        if (functionToUse === 'saveResult') {\n            const homeIndex = resultData.table.findIndex(team => team.teamName === resultData.homeTeam)\n            const awayIndex = resultData.table.findIndex(team => team.teamName === resultData.awayTeam)\n            if (resultData.homeScore !== resultData.awayScore) {\n                resultData.allResults.push(\n                    {\n                        homeTeam: {\n                            name: resultData.homeTeam,\n                            score: resultData.homeScore\n                        },\n                        awayTeam: {\n                            name: resultData.awayTeam,\n                            score: resultData.awayScore\n                        },\n                        gameFlow: resultData.gameFlow\n                    }\n                );\n            }\n            if (resultData.homeScore > resultData.awayScore) {\n                resultData.table[homeIndex].teamPoints += 3\n                resultData.table[homeIndex].teamWon += 1\n                resultData.table[awayIndex].teamLost += 1\n                resultData.table[homeIndex].teamGames++\n                resultData.table[homeIndex].teamFor += resultData.homeScore\n                resultData.table[homeIndex].teamAgainst += resultData.awayScore\n                resultData.table[awayIndex].teamGames++\n                resultData.table[awayIndex].teamFor += resultData.awayScore\n                resultData.table[awayIndex].teamAgainst += resultData.homeScore\n                resultData.pending.push(resultData.awayTeam)\n                resultData.awayTeam = resultData.pending.shift()\n            }\n            if (resultData.awayScore > resultData.homeScore) {\n                resultData.table[awayIndex].teamPoints += 3\n                resultData.table[awayIndex].teamWon += 1\n                resultData.table[homeIndex].teamLost += 1\n                resultData.table[homeIndex].teamGames++\n                resultData.table[homeIndex].teamFor += resultData.homeScore\n                resultData.table[homeIndex].teamAgainst += resultData.awayScore\n                resultData.table[awayIndex].teamGames++\n                resultData.table[awayIndex].teamFor += resultData.awayScore\n                resultData.table[awayIndex].teamAgainst += resultData.homeScore\n                resultData.pending.push(resultData.homeTeam)\n                resultData.homeTeam = resultData.pending.shift()\n            }\n\n            if (resultData.awayScore === resultData.homeScore) {\n                resultData.showTieBreaker = true\n            } else {\n                resultData.awayScore = 0\n                resultData.homeScore = 0\n                resultData.gameFlow = []\n            }\n        }\n\n        if (functionToUse === \"addGoalToPlayer\") {\n            if (variable && scoreValue) {\n                const playerIndex = gameData.teams[scoreValue - 1].teamPlayers.findIndex(player => player.userID == variable)\n                if (playerIndex > -1) {\n                    if (gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals) {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals += 1\n                    } else {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals = 1\n                    }\n                }\n            }\n        }\n\n        if (functionToUse === \"subGoalToPlayer\") {\n            if (variable && scoreValue > -1) {\n                const playerIndex = gameData.teams[scoreValue - 1].teamPlayers.findIndex(player => player.userID == variable)\n                if (playerIndex > -1) {\n                    if (gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals && gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals > 0) {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals--\n                    }\n                }\n            }\n        }\n\n\n        if (functionToUse === \"addAssistToPlayer\") {\n            if (variable && scoreValue) {\n                const playerIndex = gameData.teams[scoreValue - 1].teamPlayers.findIndex(player => player.userID == variable)\n                if (playerIndex > -1) {\n                    if (gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists) {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists += 1\n                    } else {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists = 1\n                    }\n                }\n            }\n        }\n\n        if (functionToUse === \"subAssistToPlayer\") {\n            if (variable && scoreValue > -1) {\n                const playerIndex = gameData.teams[scoreValue - 1].teamPlayers.findIndex(player => player.userID == variable)\n                if (playerIndex > -1) {\n                    if (gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists && gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists > 0) {\n                        gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists--\n                    }\n                }\n            }\n        }\n\n        const saveRef = db.collection('games').doc(gameID);\n        const result = await saveRef.update({\n            allResults: resultData.allResults,\n            table: resultData.table,\n            pending: resultData.pending,\n            homeTeam: resultData.homeTeam,\n            awayTeam: resultData.awayTeam,\n            gameFlow: resultData.gameFlow,\n            homeScore: resultData.homeScore,\n            awayScore: resultData.awayScore,\n            showTieBreaker: resultData.showTieBreaker,\n            teams: gameData.teams,\n        })\n        const gameTeams = []\n        if (gameData.teams && gameData.teams.length) {\n            gameData.teams.forEach((team, teamIndex) => {\n                const teamPlayers = [];\n                team.teamPlayers.forEach((player, idx) => {\n                    teamPlayers.push({\n                        fullName: player.first_name + \" \" + player.last_name,\n                        userID: (player.userID).toString(),\n                        goals: (player.goals || 0).toString(),\n                        assists: (player.assists || 0).toString(),\n                        playerIndex: (idx + 1).toString()\n                    })\n                })\n                gameTeams.push({\n                    teamPlayers: teamPlayers,\n                    teamIndex: (teamIndex + 1).toString(),\n                    teamColor: team.teamColor\n                })\n            })\n        }\n        callback(false, {\n            \"gameTeams\": gameTeams,\n            \"field_name\": field_name,\n            \"homeTeam\": resultData.homeTeam,\n            \"awayTeam\": resultData.awayTeam,\n            // \"gameFlow\": resultData.gameFlow,\n            \"awayScore\": resultData.awayScore,\n            \"homeScore\": resultData.homeScore,\n            \"showTieBreaker\": resultData.showTieBreaker,\n        })\n    })\n}\n\nconst getDataFromGame = async (req, callback) => {\n    const gameID = req.query.gameID;\n    let result\n    const docRef = db.collection('games').doc(gameID);\n    result = (await docRef.get()).data()\n    const gameTeams = []\n    if (result.teams && result.teams.length) {\n        result.teams.forEach((team, teamIndex) => {\n            const teamPlayers = [];\n            team.teamPlayers.forEach((player, idx) => {\n                teamPlayers.push({\n                    fullName: player.first_name + \" \" + player.last_name,\n                    userID: (player.userID).toString(),\n                    goals: (player.goals || 0).toString(),\n                    assists: (player.assists || 0).toString(),\n                    playerIndex: (idx + 1).toString()\n                })\n            })\n            gameTeams.push({\n                teamPlayers: teamPlayers,\n                teamIndex: (teamIndex + 1).toString(),\n                teamColor: team.teamColor\n            })\n        })\n    }\n    callback(false, {\n        \"gameTeams\": gameTeams || [],\n        \"field_name\": result.field_name,\n        \"homeTeam\": result.homeTeam || 0,\n        \"awayTeam\": result.awayTeam || 0,\n        // \"gameFlow\": result.gameFlow || [],\n        \"awayScore\": result.awayScore || 0,\n        \"homeScore\": result.homeScore || 0,\n        \"showTieBreaker\": result.showTieBreaker || false,\n    })\n}\n\n\nconst saveResultFlow = async (req, callback) => {\n    const gameID = req.query.gameID;\n    const scorerPlayerName = req.query.scorerPlayerName;\n    const scorerValue = req.query.scorerValue;\n    const scorerPlayerID = req.query.scorerPlayerID;\n    const scorerTeamNumber = req.query.scorerTeamNumber;\n    const assistPlayerName = req.query.assistPlayerName;\n    const assistValue = req.query.assistValue;\n    const assistPlayerID = req.query.assistPlayerID;\n    const assistTeamNumber = req.query.assistTeamNumber;\n    const homeTeamScore = req.query.homeTeamScore;\n    const awayTeamScore = req.query.awayTeamScore;\n    const teamScoredFor = req.query.teamScoredFor;\n\n    const data = {\n        scorer: {\n            playerName: scorerPlayerName,\n            value: scorerValue,\n            playerID: scorerPlayerID,\n            teamNumber: parseInt(scorerTeamNumber)\n        },\n        assist: {\n            playerName: assistPlayerName,\n            value: assistValue,\n            playerID: assistPlayerID,\n            teamNumber: parseInt(assistTeamNumber)\n        },\n        homeTeamScore: parseInt(homeTeamScore),\n        awayTeamScore: parseInt(awayTeamScore),\n        teamScoredFor: parseInt(teamScoredFor)\n    }\n    return new Promise(async (resolve, reject) => {\n        const game = db.collection('games').doc(gameID);\n        const gameData = (await game.get()).data()\n        const field_name = gameData.field_name;\n        const teams = gameData.teams;\n        let resultData = {\n            allResults: gameData.allResults,\n            table: gameData.table,\n            pending: gameData.pending,\n            homeTeam: gameData.homeTeam,\n            awayTeam: gameData.awayTeam,\n            homeScore: gameData.homeScore || 0,\n            awayScore: gameData.awayScore || 0,\n            gameFlow: gameData.gameFlow || [],\n            showTieBreaker: gameData.showTieBreaker || false,\n        }\n        resultData.gameFlow.push(\n            {\n                scorer: data.scorer,\n                assist: data.assist,\n                homeTeamScore: data.homeTeamScore,\n                awayTeamScore: data.awayTeamScore,\n                teamScoredFor: data.teamScoredFor,\n            }\n        )\n        resultData.homeScore = data.homeTeamScore\n        resultData.awayScore = data.awayTeamScore\n        if (data.scorer && data.scorer.playerID !== 0 && data.scorer.playerID !== \"0\") {\n            const playerIndex = teams[data.scorer.teamNumber - 1].teamPlayers.findIndex(player => player.userID == data.scorer.playerID)\n            if (playerIndex > -1) {\n                if (teams[data.scorer.teamNumber - 1].teamPlayers[playerIndex].goals) {\n                    teams[data.scorer.teamNumber - 1].teamPlayers[playerIndex].goals += 1\n                } else {\n                    teams[data.scorer.teamNumber - 1].teamPlayers[playerIndex].goals = 1\n                }\n            }\n        }\n        if (data.assist && data.assist.playerID !== 0 && data.assist.playerID !== \"0\") {\n            const playerIndex = teams[data.assist.teamNumber - 1].teamPlayers.findIndex(player => player.userID == data.assist.playerID)\n            if (playerIndex > -1) {\n                if (teams[data.assist.teamNumber - 1].teamPlayers[playerIndex].assists) {\n                    teams[data.assist.teamNumber - 1].teamPlayers[playerIndex].assists += 1\n                } else {\n                    teams[data.assist.teamNumber - 1].teamPlayers[playerIndex].assists = 1\n                }\n            }\n        }\n        resultData.teams = teams;\n\n        const result = await game.update({\n            allResults: resultData.allResults,\n            table: resultData.table,\n            pending: resultData.pending,\n            homeTeam: resultData.homeTeam,\n            awayTeam: resultData.awayTeam,\n            homeScore: resultData.homeScore,\n            awayScore: resultData.awayScore,\n            gameFlow: resultData.gameFlow,\n            showTieBreaker: resultData.showTieBreaker,\n            teams: teams,\n        })\n        callback(false, {\n            \"gameTeams\": resultData.teams || [],\n            \"field_name\": field_name,\n            \"homeTeam\": resultData.homeTeam || 0,\n            \"awayTeam\": resultData.awayTeam || 0,\n            // \"gameFlow\": result.gameFlow || [],\n            \"awayScore\": resultData.awayScore || 0,\n            \"homeScore\": resultData.homeScore || 0,\n            \"showTieBreaker\": resultData.showTieBreaker || false,\n        })\n    })\n\n\n}\n\nconst getUserGames = async (req, callback) => {\n    const userID = req.query.userID;\n    let result\n    const docRef = db.collection('users').doc(userID);\n    result = (await docRef.get()).data()\n    const gamesToReturn = []\n    const promises = []\n    result.gamesAdmin.forEach((game) => {\n        const gameRef = db.collection('games').doc(game);\n        promises.push(\n            new Promise(async (resolve) => {\n                let gameData = (await gameRef.get()).data()\n                gamesToReturn.push({\n                    gameID: gameData.gameID,\n                    field_name: gameData.field_name,\n                    playDate: gameData.playDate\n                })\n                resolve()\n            })\n        )\n    })\n\n    Promise.all(promises).then(() => {\n        callback(false, {\n            \"games\": gamesToReturn\n        })\n    })\n\n\n}\n\n\nmodule.exports = {saveDataToGame, getDataFromGame, getUserGames, saveResultFlow}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/utils/updatesFromWatch.js b/src/utils/updatesFromWatch.js
--- a/src/utils/updatesFromWatch.js	(revision 6905b9eecb4156b7ac2aff77c0a1c55ec8abcfca)
+++ b/src/utils/updatesFromWatch.js	(date 1720954068664)
@@ -192,6 +192,9 @@
                                 teams[flow.scorer.teamNumber].teamPlayers[playerIndex].goals--
                             }
                         }
+                        if (flow.scorer.playerID.length > 5) {
+                            updatePlayerGoals({userID: flow.scorer.playerID, action: '-'})
+                        }
                     }
 
                     if (flow.assist) {
@@ -201,6 +204,9 @@
                                 teams[flow.assist.teamNumber].teamPlayers[playerIndexAssist].assists--
                             }
                         }
+                        if (flow.assist.playerID.length > 5) {
+                            updatePlayerAssists({userID: flow.assist.playerID , action: '-'})
+                        }
                     }
                 })
             }
@@ -270,6 +276,9 @@
                         gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals = 1
                     }
                 }
+                if (variable.length > 5) {
+                    updatePlayerGoals({userID: variable, action: '+'})
+                }
             }
         }
 
@@ -281,6 +290,9 @@
                         gameData.teams[scoreValue - 1].teamPlayers[playerIndex].goals--
                     }
                 }
+                if (variable.length > 5) {
+                    updatePlayerGoals({userID: variable, action: '-'})
+                }
             }
         }
 
@@ -295,6 +307,9 @@
                         gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists = 1
                     }
                 }
+                if (variable.length > 5) {
+                    updatePlayerAssists({userID: variable, action: '+'})
+                }
             }
         }
 
@@ -306,6 +321,9 @@
                         gameData.teams[scoreValue - 1].teamPlayers[playerIndex].assists--
                     }
                 }
+                if (variable.length > 5) {
+                    updatePlayerAssists({userID: variable, action: '-'})
+                }
             }
         }
 
@@ -460,6 +478,9 @@
                     teams[data.scorer.teamNumber - 1].teamPlayers[playerIndex].goals = 1
                 }
             }
+            if (data.scorer.playerID.length > 5) {
+                updatePlayerGoals({userID: data.scorer.playerID, action: '+'})
+            }
         }
         if (data.assist && data.assist.playerID !== 0 && data.assist.playerID !== "0") {
             const playerIndex = teams[data.assist.teamNumber - 1].teamPlayers.findIndex(player => player.userID == data.assist.playerID)
@@ -470,6 +491,9 @@
                     teams[data.assist.teamNumber - 1].teamPlayers[playerIndex].assists = 1
                 }
             }
+            if (data.assist.playerID.length > 5) {
+                updatePlayerAssists({userID: data.assist.playerID, action: '+'})
+            }
         }
         resultData.teams = teams;
 
@@ -517,6 +541,15 @@
                     field_name: gameData.field_name,
                     playDate: gameData.playDate
                 })
+                gamesToReturn.sort((a, b) => {
+                    if (moment(a.playDate + '' + a.starttime, 'DD/MM/YYYY HH:mm').isBefore(moment(b.playDate + '' + b.starttime, 'DD/MM/YYYY HH:mm'))) {
+                        return -1
+                    } else if (moment(b.playDate + '' + b.starttime, 'DD/MM/YYYY HH:mm').isBefore(moment(a.playDate + '' + a.starttime, 'DD/MM/YYYY HH:mm'))) {
+                        return 1
+                    } else {
+                        return 0;
+                    }
+                })
                 resolve()
             })
         )
@@ -528,7 +561,53 @@
         })
     })
 
+}
+
 
+const updatePlayerGoals = async (data) => {
+    const playerRef = db.collection('users').doc(data.userID);
+    playerRef.get().then(async (response) => {
+        let playerData = response.data()
+        let goals = playerData && playerData.goals
+        if (goals) {
+            switch (data.action) {
+                case '+':
+                    goals++
+                    break;
+                case '-':
+                    if (goals > 0) {
+                        goals--
+                    }
+                    break;
+            }
+        } else if (data.action === '+') {
+            goals = 1
+        }
+        const result = await playerRef.update({goals})
+    })
+}
+
+const updatePlayerAssists = async (data) => {
+    const playerRef = db.collection('users').doc(data.userID);
+    playerRef.get().then(async (response) => {
+        let playerData = response.data()
+        let assists = playerData && playerData.assists
+        if (assists) {
+            switch (data.action) {
+                case '+':
+                    assists++
+                    break;
+                case '-':
+                    if (assists > 0) {
+                        assists--
+                    }
+                    break;
+            }
+        } else if (data.action === '+') {
+            assists = 1
+        }
+        const result = await playerRef.update({assists})
+    })
 }
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"fb0e4ffa-5460-4893-8f1a-5abb92ea48cb\" name=\"Default Changelist\" comment=\"changes\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\">\n    <execution />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;dicoriomri&quot;\n  }\n}</component>\n  <component name=\"GitToolBoxStore\">\n    <option name=\"projectConfigVersion\" value=\"5\" />\n  </component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"ce4ad2bf-dafc-44dd-b088-fd514a9956dd\" />\n        <option name=\"url\" value=\"https://github.com/dicoriomri/node3-weather-website.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 7\n}</component>\n  <component name=\"ProjectId\" id=\"1jCDb5FCswIUeFIXRw0ctF4wMgW\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/omri.dicori/node3-weather-website/src/utils&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/Applications/WebStorm.app/Contents/plugins/javascript-impl/jsLanguageServicesImpl/external&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/utils\" />\n      <recent name=\"$PROJECT_DIR$/src/assets\" />\n      <recent name=\"D:\\node3-weather-website\\src\\utils\" />\n      <recent name=\"D:\\node3-weather-website\\src\\assets\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/json\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"fb0e4ffa-5460-4893-8f1a-5abb92ea48cb\" name=\"Default Changelist\" comment=\"\" />\n      <created>1603299247845</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1603299247845</updated>\n      <workItem from=\"1603299248882\" duration=\"3108000\" />\n      <workItem from=\"1603356659213\" duration=\"1385000\" />\n      <workItem from=\"1691402716402\" duration=\"138000\" />\n      <workItem from=\"1691403719459\" duration=\"124000\" />\n      <workItem from=\"1694669143612\" duration=\"995000\" />\n      <workItem from=\"1694670319043\" duration=\"12000\" />\n      <workItem from=\"1711022498180\" duration=\"12889000\" />\n      <workItem from=\"1711134347350\" duration=\"598000\" />\n      <workItem from=\"1711137040943\" duration=\"399000\" />\n      <workItem from=\"1711226447308\" duration=\"1505000\" />\n      <workItem from=\"1711230609181\" duration=\"767000\" />\n      <workItem from=\"1711435310935\" duration=\"2727000\" />\n      <workItem from=\"1711448459125\" duration=\"597000\" />\n      <workItem from=\"1713344733877\" duration=\"244000\" />\n      <workItem from=\"1713345194206\" duration=\"373000\" />\n      <workItem from=\"1713346413239\" duration=\"3091000\" />\n      <workItem from=\"1713428501093\" duration=\"602000\" />\n      <workItem from=\"1713433398620\" duration=\"320000\" />\n      <workItem from=\"1713433905940\" duration=\"1859000\" />\n      <workItem from=\"1713472638583\" duration=\"265000\" />\n      <workItem from=\"1713505115759\" duration=\"599000\" />\n      <workItem from=\"1713598873027\" duration=\"598000\" />\n      <workItem from=\"1714473581768\" duration=\"415000\" />\n      <workItem from=\"1715767434966\" duration=\"16286000\" />\n      <workItem from=\"1715806083088\" duration=\"2561000\" />\n      <workItem from=\"1715927772897\" duration=\"6471000\" />\n      <workItem from=\"1715962634468\" duration=\"7127000\" />\n      <workItem from=\"1716095071266\" duration=\"2827000\" />\n      <workItem from=\"1716138211962\" duration=\"7570000\" />\n      <workItem from=\"1716367485871\" duration=\"978000\" />\n      <workItem from=\"1716467234598\" duration=\"1303000\" />\n      <workItem from=\"1716555762490\" duration=\"1544000\" />\n      <workItem from=\"1716632386542\" duration=\"900000\" />\n      <workItem from=\"1716831115386\" duration=\"620000\" />\n      <workItem from=\"1716902705062\" duration=\"2084000\" />\n      <workItem from=\"1716985623020\" duration=\"389000\" />\n      <workItem from=\"1716986039534\" duration=\"4000\" />\n      <workItem from=\"1716986532063\" duration=\"2136000\" />\n      <workItem from=\"1717044443049\" duration=\"1217000\" />\n      <workItem from=\"1717089536534\" duration=\"9045000\" />\n      <workItem from=\"1717594121168\" duration=\"2741000\" />\n      <workItem from=\"1718000030780\" duration=\"56000\" />\n      <workItem from=\"1718000223818\" duration=\"1491000\" />\n      <workItem from=\"1720772408253\" duration=\"980000\" />\n    </task>\n    <task id=\"LOCAL\u200E00001\" summary=\"added user\">\n      <created>1603301014584</created>\n      <option name=\"number\" value=\"LOCAL\u200E00001\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00001\" />\n      <updated>1603301014584</updated>\n    </task>\n    <task id=\"LOCAL\u200E00002\" summary=\"added user\">\n      <created>1603301686741</created>\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\n      <updated>1603301686741</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691402781315</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691402781315</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1691403791081</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691403791081</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n        <option value=\"Space.CommitStatus\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"added user\" />\n    <MESSAGE value=\"changes\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"changes\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6905b9eecb4156b7ac2aff77c0a1c55ec8abcfca)
+++ b/.idea/workspace.xml	(date 1720954748693)
@@ -6,6 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="fb0e4ffa-5460-4893-8f1a-5abb92ea48cb" name="Default Changelist" comment="changes">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/utils/updatesFromWatch.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/updatesFromWatch.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -121,7 +122,8 @@
       <workItem from="1717594121168" duration="2741000" />
       <workItem from="1718000030780" duration="56000" />
       <workItem from="1718000223818" duration="1491000" />
-      <workItem from="1720772408253" duration="980000" />
+      <workItem from="1720772408253" duration="1007000" />
+      <workItem from="1720791827842" duration="3644000" />
     </task>
     <task id="LOCAL‎00001" summary="added user">
       <created>1603301014584</created>
